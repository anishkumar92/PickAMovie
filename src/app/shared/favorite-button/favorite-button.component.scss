/* src/app/shared/favorite-button/favorite-button.component.scss */
.favorite-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(17, 14, 27, 0.5);
  border: none;
  color: var(--secondary-color);
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  gap: 8px;
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(176, 230, 107, 0.3);
  }
  
  &.small {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 1.1rem;
  }
  
  &.medium {
    min-width: 48px;
    height: 40px;
    border-radius: 20px;
    font-size: 1.1rem;
    padding: 0 14px;
  }
  
  &.large {
    min-width: 180px;
    height: 48px;
    border-radius: 24px;
    font-size: 1.1rem;
    padding: 0 20px;
    font-weight: 600;
  }
  
  // When active (is a favorite)
  &.active {
    background-color: rgba(226, 15, 15, 0.15);
    border: 1px solid rgba(226, 15, 15, 0.3);
    
    &:hover {
      background-color: rgba(226, 15, 15, 0.25);
    }
  }
  
  // When disabled (limit reached)
  &.disabled {
    background-color: rgba(17, 14, 27, 0.6);
    border: 1px dashed rgba(176, 230, 107, 0.3);
    cursor: pointer;
    
    &:hover {
      background-color: rgba(104, 47, 118, 0.3);
    }
  }
  
  // Default state (not a favorite)
  &:not(.active):not(.disabled) {
    background-color: rgba(176, 230, 107, 0.1);
    border: 1px solid rgba(176, 230, 107, 0.2);
    
    &:hover {
      background-color: rgba(176, 230, 107, 0.2);
      
      .heart-svg {
        transform: scale(1.1);
      }
    }
  }
  
  // General hover effect
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  // When processing
  &:disabled {
    cursor: not-allowed;
    opacity: 0.7;
    transform: none;
    box-shadow: none;
  }
}

// Heart SVG styling
.heart-container {
  position: relative;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.heart-svg {
  width: 24px;
  height: 24px;
  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  z-index: 1;
}

.heart-path {
  fill: transparent;
  stroke: var(--secondary-color);
  stroke-width: 2;
  transition: all 0.35s ease;
  
  &.filled {
    fill: var(--warning-color);
    stroke: var(--warning-color);
    animation: heartBeat 0.3s forwards;
  }
}

// Heart animation
@keyframes heartBeat {
  0% { transform: scale(1); }
  15% { transform: scale(1.3); }
  30% { transform: scale(0.95); }
  45% { transform: scale(1.2); }
  60% { transform: scale(0.95); }
  100% { transform: scale(1); }
}

// Particles
.heart-particles {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  z-index: 0;
  pointer-events: none;
}

.particle {
  position: absolute;
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: var(--warning-color);
  opacity: 0;
  
  &.p1 { top: 10px; left: 10px; }
  &.p2 { top: 0; left: 15px; }
  &.p3 { top: 15px; left: 0; }
  &.p4 { top: 20px; left: 15px; }
  &.p5 { top: 15px; left: 20px; }
  &.p6 { top: 10px; right: 10px; }
}

.heart-particles.animate {
  .particle {
    animation: particleBurst 0.6s forwards;
    
    &.p1 { animation-delay: 0.05s; }
    &.p2 { animation-delay: 0s; }
    &.p3 { animation-delay: 0.1s; }
    &.p4 { animation-delay: 0.15s; }
    &.p5 { animation-delay: 0.05s; }
    &.p6 { animation-delay: 0.1s; }
  }
}

@keyframes particleBurst {
  0% {
    opacity: 1;
    transform: translate(0, 0) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(
      calc(var(--x, 0) * 20px),
      calc(var(--y, 0) * 20px)
    ) scale(0);
  }
}

// Spinner animation
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// Text styles
.btn-text {
  font-size: 0.95rem;
  line-height: 1;
}

// Remaining count bubble
.remaining-count {
  font-size: 0.75rem;
  background-color: rgba(176, 230, 107, 0.2);
  padding: 2px 6px;
  border-radius: 10px;
  font-weight: 600;
  
  &.warning {
    background-color: rgba(226, 15, 15, 0.2);
    color: var(--warning-color);
  }
}